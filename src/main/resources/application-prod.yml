server:
  port: 8087

spring:
  config:
    activate:
      on-profile: prod
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

    elasticsearch:
      uris: ${ELASTIC_SEARCH_URI}
      username: ${ELASTIC_SEARCH_USERNAME}
      password: ${ELASTIC_SEARCH_PASSWORD}
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      idle-timeout: 30000

      max-lifetime: 500000
    tomcat:
      max-active: 5


  kafka:
    bootstrap-servers: ${KAFKA_SERVER}:9092
    consumer:
      enable-auto-commit: false
      retry-backoff-ms: 1000
      max-poll-records: 15
      fetch-min-size: 10000
      properties:
        isolation.level: read_committed
      listener:
        missing-topics-fatal: false

      notification-group:
        group-id: notification-group

      chat-group:
        group-id: chat-group


    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      linger-ms: 10
      buffer-memory: 33554432

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MariaDBDialect
    generate-ddl: true
    hibernate:
      format_sql: false
      ddl-auto: update
    show-sql: true
#    open-in-view: false



jwt:
  secretKeyRT: ${JWT_SECRET_RT}
  expirationRT: ${JWT_EXPIRATION_RT}


google:
  credentials:
    file:
      path: ${GOOGLE_FILE_PATH}
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_BUCKET_NAME}

coolsms:
  api:
    key: ${COOLSMS_KEY}
    secret: ${COOLSMS_SECRET}
    number: ${COOLSMS_NUMBER}

#테스트 진행 시 Hibernate 로그 삭제
logging:
  level:
    root: info
    org:
      hibernate:
        SQL: ERROR
        type:
          descriptor:
            sql:
              BasicBinder: ERROR

openvidu:
  url: ${OPENVIDU_URL}
  secret: ${OPENVIDU_SECRET}

management:
  endpoints:
    jmx:
      exposure:
        include: "*"
  endpoint:
    jmx:
      enabled: true